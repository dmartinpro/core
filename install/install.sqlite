begin;

CREATE TABLE "cache" (
  "key" varchar(127) NOT NULL,
  "datetime" datetime DEFAULT NULL,
  "lifetime" varchar(127) NOT NULL,
  "value" mediumtext,
  "options" mediumtext
);


CREATE INDEX cache_lifetime ON cache(`lifetime`);


CREATE TABLE "calendar_event" (
  "id" INTEGER PRIMARY KEY AUTOINCREMENT,
  "eqLogic_id" integer NOT NULL,
  "cmd_param" text,
  "value" varchar(127) DEFAULT NULL,
  "startDate" datetime DEFAULT NULL,
  "endDate" datetime DEFAULT NULL,
  "until" datetime DEFAULT NULL,
  "repeat" text
);


CREATE TABLE `cmd` (
  `id` INTEGER PRIMARY KEY AUTOINCREMENT,
  `eqLogic_id` integer NOT NULL,
  `eqType` VARCHAR(127) NULL,
  `logicalId` VARCHAR(127) NULL,
  `order` integer NULL,
  `name` VARCHAR(45) NULL,
  `configuration` TEXT BINARY NULL,
  `template` TEXT NULL,
  `isHistorized` VARCHAR(45) NOT NULL,
  `type` VARCHAR(45) NULL,
  `subType` VARCHAR(45) NULL,
  `cache` TEXT NULL DEFAULT NULL,
  `unite` VARCHAR(45) NULL,
  `eventOnly` integer NULL DEFAULT 0,
  `display` TEXT NULL,
  `isVisible` INT NULL DEFAULT 1,
  `value` VARCHAR(255) NULL,
  CONSTRAINT "fk_cmd_eqLogic_id" FOREIGN KEY ("eqLogic_id") REFERENCES "eqLogic" ("id") ON DELETE CASCADE ON UPDATE CASCADE);

CREATE INDEX cmd_order ON cmd(`order`);
CREATE INDEX cmd_eqType ON cmd(eqType);
CREATE INDEX cmd_logicalId ON cmd(logicalId);
CREATE INDEX cmd_name ON cmd(name);
CREATE INDEX cmd_isHistorized ON cmd(isHistorized);
CREATE INDEX cmd_subType ON cmd(subType);
CREATE INDEX cmd_type ON cmd(type);
CREATE INDEX cmd_value ON cmd(value);
CREATE INDEX cmd_eventOnly ON cmd(eventOnly);
CREATE UNIQUE INDEX cmd_eqLogic_id_name ON cmd(eqLogic_id,name);
CREATE INDEX cmd_logicalId_eqLogicID ON cmd(eqLogic_id,logicalId);
CREATE INDEX cmd_type_eventOnly ON cmd(type,eventOnly);


CREATE TABLE "config" (
  "plugin" varchar(127) NOT NULL DEFAULT 'core',
  "key" varchar(255) NOT NULL,
  "value" varchar(255) DEFAULT NULL
);

CREATE INDEX config_key ON config(`key`);
CREATE INDEX config_plugin_key ON config(plugin,"key");


CREATE TABLE "connection" (
  "id" INTEGER PRIMARY KEY AUTOINCREMENT,
  "ip" varchar(127) UNIQUE DEFAULT NULL,
  "failure" integer DEFAULT NULL,
  "localisation" varchar(511) DEFAULT NULL,
  "datetime" datetime DEFAULT NULL,
  "username" varchar(127) DEFAULT NULL,
  "status" varchar(127) DEFAULT NULL,
  "options" varchar(2048) DEFAULT NULL,
  "informations" varchar(2048) DEFAULT NULL
);

CREATE INDEX connection_datetime ON connection(`datetime`);
CREATE INDEX connection_status_datetime ON connection(`status`,`datetime`);


CREATE TABLE "cron" (
  "id" INTEGER PRIMARY KEY AUTOINCREMENT,
  "priority" integer DEFAULT NULL,
  "server" varchar(127) DEFAULT NULL,
  "pid" integer DEFAULT NULL,
  "enable" integer DEFAULT NULL,
  "class" varchar(127) DEFAULT NULL,
  "function" varchar(127) NOT NULL,
  "lastrun" datetime DEFAULT NULL,
  "duration" varchar(127) DEFAULT NULL,
  "state" varchar(127) DEFAULT NULL,
  "schedule" varchar(127) DEFAULT NULL,
  "timeout" integer DEFAULT NULL,
  "deamon" integer DEFAULT '0',
  "deamonSleepTime" float DEFAULT NULL,
  "option" varchar(255) DEFAULT NULL,
  "once" integer DEFAULT NULL
);

CREATE UNIQUE INDEX cron_class_function_option ON cron(class,function,option);
CREATE INDEX cron_class ON cron(`class`);
CREATE INDEX cron_deamon ON cron(`deamon`);


CREATE TABLE "dataStore" (
  "id" INTEGER PRIMARY KEY AUTOINCREMENT,
  "type" varchar(127) NOT NULL,
  "link_id" integer NOT NULL,
  "key" varchar(127) NOT NULL,
  "value" text
);

CREATE UNIQUE INDEX dataStore_type_link_id_key ON dataStore(type,link_id,`key`);


CREATE TABLE "eqLogic" (
  "id" INTEGER PRIMARY KEY AUTOINCREMENT,
  "name" varchar(127) NOT NULL,
  "logicalId" varchar(127) DEFAULT NULL,
  "object_id" integer DEFAULT NULL,
  "eqType_name" varchar(127) NOT NULL,
  "specificCapatibilities" mediumtext,
  "configuration" text,
  "isVisible" integer DEFAULT NULL,
  "eqReal_id" integer DEFAULT NULL,
  "isEnable" integer DEFAULT NULL,
  "status" text,
  "timeout" integer DEFAULT NULL,
  "category" text,
  "display" text,
  "order" integer DEFAULT '1',
  CONSTRAINT "fk_eqLogic_eqReal_id" FOREIGN KEY ("eqReal_id") REFERENCES "eqReal" ("id") ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT "fk_eqLogic_object_id" FOREIGN KEY ("object_id") REFERENCES "object" ("id") ON DELETE SET NULL ON UPDATE CASCADE
);

CREATE UNIQUE INDEX eqLogic_name_object_id ON eqLogic(name,object_id);
CREATE INDEX eqLogic_eqTypeName ON eqLogic(`eqType_name`);
CREATE INDEX eqLogic_name ON eqLogic(`name`);
CREATE INDEX eqLogic_logical_id ON eqLogic(`logicalId`);
CREATE INDEX eqLogic_logica_id_eqTypeName ON eqLogic(`logicalId`,eqType_name);
CREATE INDEX eqLogic_object_id ON eqLogic(`object_id`);
CREATE INDEX eqLogic_timeout ON eqLogic(`timeout`);
CREATE INDEX eqLogic_eqReal_id ON eqLogic(`eqReal_id`);

CREATE TABLE "history" (
  "cmd_id" INTEGER,
  "datetime" datetime NOT NULL,
  "value" float DEFAULT NULL,
  CONSTRAINT "fk_history_cmd_id" FOREIGN KEY ("cmd_id") REFERENCES "cmd" ("id") ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE UNIQUE INDEX history_cmd_id_datetime ON history(cmd_id,`datetime`);
CREATE INDEX history_cmd_id ON history(`cmd_id`);


CREATE TABLE "historyArch" (
  "cmd_id" INTEGER,
  "datetime" datetime NOT NULL,
  "value" float DEFAULT NULL,
  CONSTRAINT "fk_historyArch_cmd_id" FOREIGN KEY ("cmd_id") REFERENCES "cmd" ("id") ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE UNIQUE INDEX historyArch_cmd_id_datetime ON historyArch(cmd_id,`datetime`);
CREATE INDEX historyArch_cmd_id ON historyArch(`cmd_id`);


CREATE TABLE "interactDef" (
  "id" INTEGER PRIMARY KEY AUTOINCREMENT,
  "name" varchar(255) DEFAULT NULL,
  "enable" integer DEFAULT '1',
  "query" text,
  "reply" text,
  "link_type" varchar(127) DEFAULT NULL,
  "link_id" varchar(255) DEFAULT NULL,
  "person" varchar(255) DEFAULT NULL,
  "options" text,
  "filtres" text,
  "position" integer DEFAULT NULL,
  "group" varchar(127) DEFAULT NULL
);


CREATE TABLE "interactQuery" (
  "id" INTEGER PRIMARY KEY AUTOINCREMENT,
  "interactDef_id" integer NOT NULL,
  "enable" integer DEFAULT '1',
  "query" text,
  "link_type" varchar(127) DEFAULT NULL,
  "link_id" varchar(255) DEFAULT NULL
);

CREATE INDEX interactQuery_interactDef_id ON interactQuery(`interactDef_id`);


CREATE TABLE "jeeNetwork" (
  "id" INTEGER PRIMARY KEY AUTOINCREMENT,
  "ip" varchar(127) DEFAULT NULL,
  "apikey" varchar(255) DEFAULT NULL,
  "plugin" text,
  "configuration" text,
  "name" varchar(127) DEFAULT NULL,
  "status" varchar(127) DEFAULT NULL
);

CREATE INDEX jeeNetwork_ip ON jeeNetwork(`ip`);


CREATE TABLE "listener" (
  "id" INTEGER PRIMARY KEY AUTOINCREMENT,
  "class" varchar(127) DEFAULT NULL,
  "function" varchar(127) DEFAULT NULL,
  "event" varchar(255) DEFAULT NULL,
  "option" text
);

CREATE INDEX listener_event ON listener(`event`);


CREATE TABLE "message" (
  "id" INTEGER PRIMARY KEY AUTOINCREMENT,
  "date" datetime NOT NULL,
  "logicalId" varchar(127) DEFAULT NULL,
  "plugin" varchar(127) NOT NULL,
  "message" text,
  "action" text
);

CREATE INDEX message_plugin_logicalID ON message(`plugin`,logicalId);


CREATE TABLE "object" (
  "id" INTEGER PRIMARY KEY AUTOINCREMENT,
  "name" varchar(45) NOT NULL,
  "father_id" integer DEFAULT NULL,
  "isVisible" integer DEFAULT NULL,
  "position" integer DEFAULT NULL,
  "configuration" text,
  "display" text,
  "image" mediumtext,
  CONSTRAINT "fk_object_father_id" FOREIGN KEY ("father_id") REFERENCES "object" ("id") ON DELETE SET NULL ON UPDATE CASCADE
);


CREATE TABLE "plan" (
  "id" INTEGER PRIMARY KEY AUTOINCREMENT,
  "planHeader_id" integer NOT NULL,
  "link_type" varchar(127) DEFAULT NULL,
  "link_id" integer DEFAULT NULL,
  "position" text,
  "display" text,
  "css" text,
  CONSTRAINT "fk_plan_planHeader_id" FOREIGN KEY ("planHeader_id") REFERENCES "planHeader" ("id") ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE UNIQUE INDEX plan_link_type_link_id ON plan(link_type,`link_id`);
CREATE INDEX plan_planHeader_id ON plan(`planHeader_id`);


CREATE TABLE "planHeader" (
  "id" integer NOT NULL,
  "name" varchar(127) DEFAULT NULL,
  "image" mediumtext,
  "configuration" text
);


CREATE TABLE "rights" (
  "id" INTEGER PRIMARY KEY AUTOINCREMENT,
  "entity" varchar(127) DEFAULT NULL,
  "user_id" integer NOT NULL,
  "right" integer DEFAULT NULL,
  "options" text,
  CONSTRAINT "fk_rights_user_id" FOREIGN KEY ("user_id") REFERENCES "user" ("id") ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE UNIQUE INDEX rights_entity_user_id ON rights(entity,`user_id`);
CREATE INDEX rights_user_id ON rights(`user_id`);


CREATE TABLE "scenario" (
  "id" INTEGER PRIMARY KEY AUTOINCREMENT,
  "name" varchar(127) DEFAULT NULL,
  "group" varchar(127) DEFAULT NULL,
  "state" varchar(127) DEFAULT NULL,
  "isActive" integer DEFAULT '1',
  "lastLaunch" datetime DEFAULT NULL,
  "mode" varchar(127) DEFAULT NULL,
  "schedule" text,
  "pid" integer DEFAULT NULL,
  "scenarioElement" text,
  "trigger" varchar(255) DEFAULT NULL,
  "timeout" integer DEFAULT NULL,
  "isVisible" integer DEFAULT '1',
  "object_id" integer DEFAULT NULL,
  "display" text,
  "description" text,
  "configuration" text,
  "type" varchar(127) DEFAULT 'expert',
  CONSTRAINT "fk_scenario_object_id" FOREIGN KEY ("object_id") REFERENCES "object" ("id") ON DELETE SET NULL ON UPDATE CASCADE
);

CREATE UNIQUE INDEX scenario_group_object_id_name ON scenario(`group`,`object_id`,name);
CREATE INDEX scenario_group ON scenario(`group`);
CREATE INDEX scenario_object_id ON scenario(`object_id`);
CREATE INDEX scenario_trigger ON scenario(`trigger`);
CREATE INDEX scenario_mode ON scenario(`mode`);
CREATE INDEX scenario_mode_trigger ON scenario(`mode`,trigger);


CREATE TABLE "scenarioElement" (
  "id" INTEGER PRIMARY KEY AUTOINCREMENT,
  "order" integer NOT NULL,
  "type" varchar(127) DEFAULT NULL,
  "name" varchar(127) DEFAULT NULL,
  "options" text,
  "log" text
);


CREATE TABLE "scenarioExpression" (
  "id" INTEGER PRIMARY KEY AUTOINCREMENT,
  "order" integer DEFAULT NULL,
  "scenarioSubElement_id" integer NOT NULL,
  "type" varchar(127) DEFAULT NULL,
  "subtype" varchar(127) DEFAULT NULL,
  "expression" text,
  "options" text,
  "log" text,
  CONSTRAINT "fk_scenarioExpression_scenarioSubElement_id" FOREIGN KEY ("scenarioSubElement_id") REFERENCES "scenarioSubElement" ("id") ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE INDEX scenarioExpression_scenarioSubElement_id ON scenarioExpression(`scenarioSubElement_id`);


CREATE TABLE "scenarioSubElement" (
  "id" INTEGER PRIMARY KEY AUTOINCREMENT,
  "order" integer DEFAULT NULL,
  "scenarioElement_id" integer NOT NULL,
  "type" varchar(127) DEFAULT NULL,
  "subtype" varchar(127) DEFAULT NULL,
  "name" varchar(127) DEFAULT NULL,
  "options" text,
  "log" text,
  CONSTRAINT "fk_scenarioSubElement_scenarioElement_id" FOREIGN KEY ("scenarioElement_id") REFERENCES "scenarioElement" ("id") ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE INDEX scenarioSubElement_scenarioElement_id ON scenarioSubElement(`scenarioElement_id`);
CREATE INDEX scenarioSubElement_scenarioElement_id_type ON scenarioSubElement(`scenarioElement_id`,type);


CREATE TABLE "update" (
  "id" INTEGER PRIMARY KEY AUTOINCREMENT,
  "type" varchar(127) DEFAULT NULL,
  "name" varchar(127) DEFAULT NULL,
  "logicalId" varchar(127) DEFAULT NULL,
  "localVersion" varchar(127) DEFAULT NULL,
  "remoteVersion" varchar(127) DEFAULT NULL,
  "status" varchar(127) DEFAULT NULL,
  "configuration" text
);

CREATE INDEX update_status ON `update`(`status`);


CREATE TABLE "user" (
  "id" INTEGER PRIMARY KEY AUTOINCREMENT,
  "login" varchar(45) DEFAULT NULL,
  "password" varchar(255) DEFAULT NULL,
  "options" text,
  "hash" varchar(255) DEFAULT NULL,
  "rights" text,
  "enable" integer DEFAULT '1'
);


CREATE TABLE "view" (
  "id" integer NOT NULL,
  "name" varchar(127) DEFAULT NULL
);

CREATE UNIQUE INDEX view_name ON view(name);


CREATE TABLE "viewData" (
  "id" INTEGER PRIMARY KEY AUTOINCREMENT,
  "order" integer DEFAULT NULL,
  "viewZone_id" integer NOT NULL,
  "type" varchar(127) DEFAULT NULL,
  "link_id" integer NOT NULL,
  "configuration" text,
  CONSTRAINT "fk_viewData_viewZone_id" FOREIGN KEY ("viewZone_id") REFERENCES "viewZone" ("id") ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE UNIQUE INDEX viewData_viewZone_id_link_id_type ON viewData(viewZone_id,link_id,type);
CREATE INDEX viewData_viewZone_id ON viewData(viewZone_id);
CREATE INDEX viewData_order_viewZone_id ON viewData(`order`,viewZone_id);


CREATE TABLE "viewZone" (
  "id" INTEGER PRIMARY KEY AUTOINCREMENT,
  "view_id" integer NOT NULL,
  "type" varchar(127) DEFAULT NULL,
  "name" varchar(127) DEFAULT NULL,
  "position" integer DEFAULT NULL,
  "configuration" text,
  CONSTRAINT "fk_viewZone_view_id" FOREIGN KEY ("view_id") REFERENCES "view" ("id") ON DELETE CASCADE ON UPDATE CASCADE
);

CREATE INDEX viewZone_name ON viewZone(`name`);

commit;
